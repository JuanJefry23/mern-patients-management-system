{"version":3,"sources":["config/axios.js","components/SinPacientes.js","components/Pacientes.js","helpers/validacionFormulario.js","components/NuevaCita.js","components/Cita.js","App.js","reportWebVitals.js","index.js"],"names":["clienteAxios","axios","create","baseURL","process","SinPacientes","className","to","Pacientes","citas","length","map","cita","_id","nombre","fecha","hora","sintomas","propietario","telefono","validacionFormulario","e","target","value","parseInt","console","log","withRouter","props","useState","guardarCita","actualizarState","name","onSubmit","preventDefault","Swal","fire","title","text","icon","confirmButtonColor","confirmButtonText","post","then","respuesta","guardarConsultar","history","push","htmlFor","type","id","placeholder","onChange","rows","onClick","showCancelButton","cancelButtonColor","cancelButtonText","result","isConfirmed","delete","catch","error","App","guardarCitas","consultar","useEffect","get","data","exact","path","component","render","filter","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9772ae6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst clienteAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n});\r\n\r\nexport default clienteAxios;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SinPacientes = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"bg-title sin-pacientes\">\r\n        <h1 className=\"my-5\">Agrega la primera cita</h1>\r\n      </div>\r\n\r\n      <div className=\"container mt-5 py-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mb-5 d-flex justify-content-center\">\r\n            <Link\r\n              to={\"/nueva\"}\r\n              className=\"btn btn-success text-uppercase py-2 px-5 font-weight-bold\"\r\n            >\r\n              Crear Cita\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SinPacientes;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SinPacientes from \"./SinPacientes\";\r\n\r\nconst Pacientes = ({ citas }) => {\r\n  if (citas.length === 0) return <SinPacientes />;\r\n  return (\r\n    <Fragment>\r\n      <div className=\"bg-title\">\r\n        <h1 className=\"my-5\">Administrador de Pacientes</h1>\r\n      </div>\r\n\r\n      <div className=\"container mt-5 py-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mb-5 d-flex justify-content-center\">\r\n            <Link\r\n              to={\"/nueva\"}\r\n              className=\"btn btn-success text-uppercase py-2 px-5 font-weight-bold\"\r\n            >\r\n              Crear Cita\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <div className=\"list-group\">\r\n              {citas.map((cita) => (\r\n                <Link\r\n                  to={`/cita/${cita._id}`}\r\n                  key={cita._id}\r\n                  className=\"p-5 list-group-item list-group-item-action flex-column align-items-start\"\r\n                >\r\n                  <div className=\"d-flex w-100 justify-content-between mb-4\">\r\n                    <h3 className=\"mb-3\">{cita.nombre}</h3>\r\n                    <small className=\"fecha-alta\">\r\n                      {cita.fecha} - {cita.hora}\r\n                    </small>\r\n                  </div>\r\n\r\n                  <p className=\"mb-0\">{cita.sintomas}</p>\r\n\r\n                  <div className=\"contacto py-3\">\r\n                    <p>Dueño: {cita.propietario}</p>\r\n                    <p>Teléfono: {cita.telefono}</p>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Pacientes;\r\n\r\n/*\r\n\r\n-Utilizaré el método \".map\" para iterar en el arreglo se recomienda este Y NO \".forEach\" en React.\r\n\r\n*/\r\n","function validacionFormulario(e) {\r\n  if (\r\n    e.target.nombre.value === \"\" ||\r\n    e.target.propietario.value === \"\" ||\r\n    (e.target.telefono.value === \"\" &&\r\n      typeof parseInt(e.target.telefono.value) !== \"number\") ||\r\n    e.target.fecha.value === \"\" ||\r\n    e.target.hora.value === \"\" ||\r\n    e.target.sintomas.value === \"\"\r\n  ) {\r\n    console.log(typeof parseInt(e.target.telefono.value));\r\n    console.log(e.target.telefono.value);\r\n    console.log(\"Falta validar\");\r\n    console.log(typeof 10);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default validacionFormulario;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport clienteAxios from \"../config/axios\";\r\nimport validacionFormulario from \"../helpers/validacionFormulario\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst NuevaCita = (props) => {\r\n  const [cita, guardarCita] = useState({\r\n    nombre: \"\",\r\n    propietario: \"\",\r\n    fecha: \"\",\r\n    hora: \"\",\r\n    telefono: \"\",\r\n    sintomas: \"\",\r\n  });\r\n\r\n  //Evento para leer los datos del formulario\r\n  const actualizarState = (e) => {\r\n    guardarCita({\r\n      ...cita,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Enviar una petición a la rest API\r\n  const crearNuevaCita = (e) => {\r\n    e.preventDefault();\r\n\r\n    //Validamos que no este vacío\r\n    if (validacionFormulario(e)) {\r\n      Swal.fire({\r\n        title: \"Todos los campos son obligatorios\",\r\n        text: \"Completa todo el formulario por favor\",\r\n        icon: \"warning\",\r\n        confirmButtonColor: \"#3085d6\",\r\n        confirmButtonText: \"Entendido\",\r\n      });\r\n      return;\r\n    } else {\r\n      //Enviar la petición por axios\r\n      console.log(cita);\r\n      clienteAxios.post(\"/pacientes\", cita).then((respuesta) => {\r\n        console.log(respuesta);\r\n\r\n        props.guardarConsultar(true);\r\n        //Redireccionar\r\n        props.history.push(\"/\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"bg-title nueva-cita\">\r\n        <h1 className=\"my-5\">Crear nueva cita</h1>\r\n      </div>\r\n\r\n      <div className=\"container mt-5 py-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mb-5 d-flex justify-content-center\">\r\n            <Link\r\n              to={\"/\"}\r\n              className=\"btn btn-success text-uppercase py-2 px-5 font-weight-bold\"\r\n            >\r\n              Volver\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-8 mx-auto\">\r\n        <form onSubmit={crearNuevaCita} className=\"bg-white p-5 bordered\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nombre\">Nombre Mascota</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              id=\"nombre\"\r\n              name=\"nombre\"\r\n              placeholder=\"Nombre Mascota\"\r\n              onChange={actualizarState}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"propietario\">Nombre Propietario</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-lg\"\r\n              id=\"propietario\"\r\n              name=\"propietario\"\r\n              placeholder=\"Nombre Propietario\"\r\n              onChange={actualizarState}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"telefono\">Teléfono</label>\r\n            <input\r\n              type=\"tel\"\r\n              className=\"form-control form-control-lg\"\r\n              id=\"telefono\"\r\n              name=\"telefono\"\r\n              placeholder=\"Teléfono\"\r\n              onChange={actualizarState}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"fecha\">Fecha Alta</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control form-control-lg\"\r\n              id=\"fecha\"\r\n              name=\"fecha\"\r\n              onChange={actualizarState}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"hora\">Hora Alta</label>\r\n            <input\r\n              type=\"time\"\r\n              className=\"form-control form-control-lg\"\r\n              id=\"hora\"\r\n              name=\"hora\"\r\n              onChange={actualizarState}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"sintomas\">Síntomas</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"sintomas\"\r\n              rows=\"6\"\r\n              onChange={actualizarState}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primary mt-3 w-100 p-3 text-uppercase font-weight-bold\"\r\n            value=\"Crear Cita\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(NuevaCita);\r\n\r\n/*\r\n\r\n-En vez de crear varios \"useState\" puedo crear un solo \"useState\" e inicializarlo con un objeto con los campos que tiene\r\nla B.Datos, pero vacios.\r\n\r\n- Al hacer :   ...cita,\r\n              [e.target.name]:[e.target.value]\r\nestamos agregando un nuevo valor, si no declaro \"...cita\", entonces lo sobreescribirá y nunca agregará por lo que siempre\r\nhabría solo 1 paciente.\r\n\r\n*/\r\n","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n//Importo mi cliente de axios\r\nimport clienteAxios from \"../config/axios\";\r\n\r\nconst Cita = (props) => {\r\n  if (!props.cita) {\r\n    props.history.push(\"/\");\r\n    return null;\r\n  }\r\n\r\n  //Extraer por props\r\n  const {\r\n    cita: { _id, nombre, propietario, fecha, hora, telefono, sintomas },\r\n  } = props;\r\n\r\n  //Elimina un registro\r\n  const eliminarCita = (id) => {\r\n    Swal.fire({\r\n      title: \"Estas seguro?\",\r\n      text: \"Una cita eliminada no se puede recuperar\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Si, Eliminar!\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        //Alerta de eliminado\r\n        Swal.fire(\"Eliminado!\", \"La cita fue eliminada.\", \"success\");\r\n\r\n        //Eliminado de la base de datos\r\n        clienteAxios\r\n          .delete(`/pacientes/${id}`)\r\n          .then(() => {\r\n            props.guardarConsultar(true);\r\n            props.history.push(\"/\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"bg-title\">\r\n        <h1 className=\"my-5\">Nombre cita: {nombre}</h1>\r\n      </div>\r\n\r\n      <div className=\"container mt-5 py-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mb-5 d-flex justify-content-center\">\r\n            <Link\r\n              to={\"/\"}\r\n              className=\"btn btn-success text-uppercase py-2 px-5 font-weight-bold\"\r\n            >\r\n              Volver\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <div className=\"list-group\">\r\n              <div className=\"p-5 list-group-item list-group-item-action flex-column align-items-center\">\r\n                <div className=\"d-flex w-100 justify-content-between mb-4\">\r\n                  <h3 className=\"mb-3\">{nombre}</h3>\r\n                  <small className=\"fecha-alta\">\r\n                    {fecha} - {hora}\r\n                  </small>\r\n                </div>\r\n\r\n                <p className=\"mb-0\">{sintomas}</p>\r\n\r\n                <div className=\"contacto py-3\">\r\n                  <p>Dueño: {propietario}</p>\r\n                  <p>Teléfono: {telefono}</p>\r\n                </div>\r\n\r\n                <div className=\"d-flex\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-uppercase py-2 px-5 font-weight-bold btn btn-danger col\"\r\n                    onClick={() => eliminarCita(_id)}\r\n                  >\r\n                    Eliminar &times;\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(Cita);\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport clienteAxios from \"./config/axios\";\n\n//Components\nimport Pacientes from \"./components/Pacientes\";\nimport NuevaCita from \"./components/NuevaCita\";\nimport Cita from \"./components/Cita\";\n\nfunction App() {\n  //Uso mi state para guardar cita\n  const [citas, guardarCitas] = useState([]); //Lo inicializo como un arreglo vacio para poder recorrerlo luego cuando tenga datos con \".map\"\n\n  const [consultar, guardarConsultar] = useState(true);\n\n  //Mi useEffect un buen lugar para consumir mi API externa\n  useEffect(() => {\n    if (consultar) {\n      const consultarApi = () => {\n        clienteAxios\n          .get(\"/pacientes\")\n          .then((respuesta) => {\n            //Gardar la respuesta en el state\n            guardarCitas(respuesta.data);\n\n            //Deshabilitar la consulta\n            guardarConsultar(false);\n          })\n          .catch((error) => console.log(error));\n      };\n      consultarApi();\n    }\n  }, [consultar]);\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={() => <Pacientes citas={citas} />} />\n        <Route\n          exact\n          path=\"/nueva\"\n          component={() => <NuevaCita guardarConsultar={guardarConsultar} />}\n        />\n        <Route\n          exact\n          path=\"/cita/:id\"\n          render={(props) => {\n            const cita = citas.filter(\n              (cita) => cita._id === props.match.params.id\n            );\n\n            return <Cita cita={cita[0]} guardarConsultar={guardarConsultar} />;\n          }}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n/*\n\n-Para poder pasarle las citas al componente \"Pacientes\" lo tengo que convertir\nen un arrow function y hacer \n\n<Route\n  ....\n  component = { () => <Pacientes citas={citas}/>}\n/>\n\n\n-Muy importante en el Route de Cita en render=  ..... es importante la posicion del arreglo cita[0]\n\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}